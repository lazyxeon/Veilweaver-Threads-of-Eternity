searchState.loadedDescShard("astraweave_render", 0, "Returns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nUnit cube centered at origin, with face normals (no UVs).\nGround plane (square) on XZ at y=0, size 1 (we’ll scale …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nA loaded texture with its GPU resources\nCreate a 1x1 normal map texture pointing upward (0, 0, 1)\nCreate a 1x1 white texture as a default/fallback\nReturns the argument unchanged.\nLoad a texture from byte data (requires “textures” …\nLoad a texture from a file (requires “textures” …\nCalls <code>U::from(self)</code>.\nValidate that texture files exist and can be loaded\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.")